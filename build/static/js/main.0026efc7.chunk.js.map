{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/personsService.js","App.js","index.js"],"names":["Filter","handleFilterChange","onChange","PersonForm","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","type","value","Persons","persons","filter","deletePerson","person","name","includes","map","number","onClick","id","baseUrl","axios","get","newPersonObject","post","put","delete","Notification","isSuccesful","message","notificationStyle","color","borderColor","background","fontSize","bordertyle","borderRadius","padding","style","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","setIsSuccesful","timerId","setTimerId","useEffect","personsServive","then","response","data","setNotification","succesful","clearTimeout","timerNumber","setTimeout","Event","target","console","log","preventDefault","isNewName","every","concat","catch","error","window","confirm","find","p","err","alert","status","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0026efc7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({ handleFilterChange }) => {\r\n    return (<div>\r\n        <label>filter shown with </label>\r\n        <br></br>\r\n        <input onChange={handleFilterChange} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({ addPerson, handleNameChange, handleNumberChange, newName, newNumber }) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                <label>name: </label>\r\n                <input type='text' value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                <label>number: </label>\r\n                <input type='text' value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n\r\nconst Persons = ({ persons, filter, deletePerson }) => {\r\n\r\n    return (persons.filter(person => person.name.includes(filter)).map((person) => {\r\n        return (/*  console.log(person) || */\r\n            <div key={person.name}>\r\n                {person.name} {person.number}\r\n                <button onClick={() => { deletePerson(person.id) }} >delete</button>\r\n            </div>\r\n        )\r\n    }))\r\n}\r\n\r\nexport default Persons","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\n/* const baseUrl = 'http://localhost:3002/api/persons'\r\n */\r\n\r\n/* const baseUrl = 'https://fullstack21puhelinluettelo.herokuapp.com/api/persons'\r\n */\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newPersonObject => {\r\n    return axios.post(baseUrl, newPersonObject)\r\n}\r\n\r\nconst update = (id, newPersonObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newPersonObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport Filter from './Filter.js'\r\nimport PersonForm from './PersonForm.js'\r\nimport Persons from './Persons.js'\r\nimport personsServive from './services/personsService.js'\r\n\r\nconst Notification = ({ isSuccesful, message }) => {\r\n    const notificationStyle = {\r\n        color: isSuccesful ? 'green' : 'red',\r\n        borderColor: isSuccesful ? 'green' : 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        bordertyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n\r\n    }\r\n\r\n    if (message === null) { return null }\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [notificationMessage, setNotificationMessage] = useState(null)\r\n    const [isSuccesful, setIsSuccesful] = useState(true)\r\n    const [timerId, setTimerId] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personsServive.getAll().then(response => {\r\n            setPersons(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const setNotification = (succesful, message) => {\r\n        setIsSuccesful(succesful)\r\n        setNotificationMessage(message)\r\n        clearTimeout(timerId)\r\n        const timerNumber = setTimeout(() => { setNotificationMessage(null) }, 4000)\r\n        setTimerId(timerNumber)\r\n    }\r\n\r\n    const addPerson = (Event) => {\r\n        Event.preventDefault()\r\n\r\n        if (newNumber === '' || newName === '') {\r\n            setNotification(false, 'Name or number is empty')\r\n            return\r\n        }\r\n\r\n        let isNewName = true\r\n        persons.every(person => {\r\n            if (person.name === newName) {\r\n                isNewName = false\r\n                return false\r\n            }\r\n            else return true\r\n        })\r\n\r\n        if (isNewName) {\r\n            personsServive.create({ name: newName, number: newNumber })\r\n                .then(response => {\r\n                    setNotification(true, `Successfully added ${newName} to server`)\r\n                    setPersons(persons.concat(response.data))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                })\r\n                .catch(error => {\r\n                    setNotification(false, `Failed. Error: ${error.message}`)\r\n                    console.log(error.response.data)\r\n                })\r\n        }\r\n        else {\r\n            const confirm = window.confirm(`${newName} is alredy in the phonebook, replace the number with new one?`)\r\n            if (confirm) {\r\n                const person = persons.find(p => p.name === newName)\r\n                personsServive.update(person.id, { ...person, number: newNumber })\r\n                    .then(response => {\r\n                        setNotification(true, `Successfully changed ${response.data.name}'s number.`)\r\n                        personsServive.getAll().then(response => {\r\n                            setPersons(response.data);\r\n                            setNewName('');\r\n                            setNewNumber('')\r\n                        }).catch(err => alert(`Persons number updated in the server but error in updating UI. ${err}`))\r\n                    }\r\n                    ).catch(err => {\r\n                        if (err.response.status === 404) {\r\n                            setNotification(false, `${person.name} doesn't exist or it is deleted.`)\r\n                            personsServive.getAll().then(response => {\r\n                                setPersons(response.data)\r\n                            })\r\n                        }\r\n                    })\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const deletePerson = id => {\r\n        const personToDelete = persons.find(p => p.id === id)\r\n        const confirmed = window.confirm(`Delete ${personToDelete.name} id:${id}?`)\r\n        if (confirmed) {\r\n            console.log(`Deleting ${personToDelete.name}`)\r\n            personsServive.deletePerson(id)\r\n                .then(response => {\r\n                    setNotification(true, `Successfully deleted ${personToDelete.name} from server.`)\r\n                    console.log(`Deleted person: ${personToDelete.name}`)\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                })\r\n                .catch(err => {\r\n                    if (err.response.status === 404) {\r\n                        setNotification(false, `${personToDelete.name} is already deleted from server.`)\r\n                        personsServive.getAll().then(response => {\r\n                            setPersons(response.data)\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    const handleNameChange = (Event) => {\r\n        setNewName(Event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (Event) => {\r\n        setNewNumber(Event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (Event) => {\r\n        setNewFilter(Event.target.value)\r\n        console.log('filter changed', newFilter)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Alex's Phonebook</h2>\r\n            <Notification isSuccesful={isSuccesful} message={notificationMessage} />\r\n\r\n            <Filter handleFilterChange={handleFilterChange} />\r\n            <h3>Add a new person</h3>\r\n            <PersonForm\r\n                addPerson={addPerson}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n            />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={persons} filter={newFilter} deletePerson={deletePerson} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}