{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/personsService.js","App.js","index.js"],"names":["Filter","handleFilterChange","onChange","PersonForm","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","type","value","Persons","persons","filter","deletePerson","person","name","includes","map","number","onClick","id","baseUrl","axios","get","newPersonObject","post","put","delete","Notification","isSuccesful","message","notificationStyle","color","borderColor","background","fontSize","bordertyle","borderRadius","padding","console","log","style","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","setIsSuccesful","timerId","setTimerId","useEffect","personsServive","then","response","data","setNotification","succesful","clearTimeout","timerNumber","setTimeout","Event","target","preventDefault","isNewName","every","concat","catch","err","window","confirm","find","p","alert","status","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fce7581c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = ({ handleFilterChange }) => {\r\n    return (<div>\r\n        <label>filter shown with </label>\r\n        <input onChange={handleFilterChange} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({ addPerson, handleNameChange, handleNumberChange, newName, newNumber }) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                <label>name: </label>\r\n                <input type='text' value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                <label>number: </label>\r\n                <input type='text' value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n\r\nconst Persons = ({ persons, filter, deletePerson }) => {\r\n\r\n    return (persons.filter(person => person.name.includes(filter)).map((person) => {\r\n        return (/*  console.log(person) || */\r\n            <div key={person.name}>\r\n                {person.name} {person.number}\r\n                <button onClick={() => { deletePerson(person.id) }} >delete</button>\r\n            </div>\r\n        )\r\n    }))\r\n}\r\n\r\nexport default Persons","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\n/* const baseUrl = 'http://localhost:3002/api/persons'\r\n */\r\n\r\n/* const baseUrl = 'https://fullstack21puhelinluettelo.herokuapp.com/api/persons'\r\n */\r\n\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newPersonObject => {\r\n    return axios.post(baseUrl, newPersonObject)\r\n}\r\n\r\nconst update = (id, newPersonObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newPersonObject)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter.js'\nimport PersonForm from './PersonForm.js'\nimport Persons from './Persons.js'\nimport personsServive from './services/personsService.js'\n\nconst Notification = ({ isSuccesful, message }) => {\n    const notificationStyle = {\n        color: isSuccesful ? 'green' : 'red',\n        borderColor: isSuccesful ? 'green' : 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        bordertyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n\n    }\n\n    if (message === null) { console.log('Notification message is null'); return null }\n    return (\n        <div style={notificationStyle}>\n            {message}\n        </div>\n    )\n\n}\n\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [notificationMessage, setNotificationMessage] = useState(null)\n    const [isSuccesful, setIsSuccesful] = useState(true)\n    const [timerId, setTimerId] = useState(null)\n\n    useEffect(() => {\n        personsServive.getAll().then(response => {\n            setPersons(response.data)\n        })\n    }, [])\n\n    const setNotification = (succesful, message) => {\n        setIsSuccesful(succesful)\n        setNotificationMessage(message)\n        clearTimeout(timerId)\n        const timerNumber = setTimeout(() => { console.log(`Timeout: ${message}`); setNotificationMessage(null) }, 6000)\n        setTimerId(timerNumber)\n    }\n\n    const addPerson = (Event) => {\n        Event.preventDefault()\n\n        if (newNumber === '' || newName === '') {\n            /* alert('Number is empty') */\n            setNotification(false, 'Name or number is empty')\n            return\n        }\n\n        let isNewName = true\n        persons.every(person => {\n            if (person.name === newName) { isNewName = false; return false }\n            else return true\n        })\n\n        if (isNewName) {\n            personsServive.create({ name: newName, number: newNumber })\n                .then(response => {\n                    setNotification(true, `Successfully added ${newName} to server`)\n                    setPersons(persons.concat(response.data))\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(err => { /* alert(`Failed. Error: ${err}`) */\n                    setNotification(false, `Failed. Error: ${err}`)\n                })\n        }\n        else {\n            const confirm = window.confirm(`${newName} is alredy in the phonebook, replace the number with new one?`)\n            if (confirm) {\n                const person = persons.find(p => p.name === newName)\n                personsServive.update(person.id, { ...person, number: newNumber })\n                    .then(response => {\n                        setNotification(true, `Successfully changed ${response.data.name}'s number.`)\n                        personsServive.getAll().then(response => {\n                            setPersons(response.data);\n                            setNewName('');\n                            setNewNumber('')\n                        }).catch(err => alert(`Persons number updated in the server but error in updating UI. ${err}`))\n                    }\n                    ).catch(err => {\n                        //alert(`Error updating persons number. ${err}`)\n                        if (err.response.status === 404) {\n                            setNotification(false, `${person.name} doesn't exist or it is deleted.`)\n                            personsServive.getAll().then(response => {\n                                setPersons(response.data)\n                            })\n                        }\n                    })\n\n            }\n        }\n\n    }\n\n    const deletePerson = id => {\n        const personToDelete = persons.find(p => p.id === id)\n        const confirmed = window.confirm(`Delete ${personToDelete.name} id:${id}?`)\n        if (confirmed) {\n            console.log(`Deleting ${personToDelete.name}`)\n            personsServive.deletePerson(id)\n                .then(response => {\n                    setNotification(true, `Successfully deleted ${personToDelete.name} from server.`)\n                    console.log(`Deleted person: ${personToDelete.name}`)\n                    setPersons(persons.filter(p => p.id !== id))\n                })\n                .catch(err => {\n                    if (err.response.status === 404) {\n                        setNotification(false, `${personToDelete.name} is already deleted from server.`)\n                        personsServive.getAll().then(response => {\n                            setPersons(response.data)\n                        })\n                    }\n                })\n        }\n    }\n\n\n    const handleNameChange = (Event) => {\n        setNewName(Event.target.value)\n    }\n\n    const handleNumberChange = (Event) => {\n        setNewNumber(Event.target.value)\n    }\n\n    const handleFilterChange = (Event) => {\n        setNewFilter(Event.target.value)\n        console.log('filter changed', newFilter)\n    }\n\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Filter handleFilterChange={handleFilterChange} />\n            <h3>Add a new person</h3>\n            <PersonForm\n                addPerson={addPerson}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                newName={newName}\n                newNumber={newNumber}\n            />\n            <Notification isSuccesful={isSuccesful} message={notificationMessage} />\n            <h3>Numbers</h3>\n            <Persons persons={persons} filter={newFilter} deletePerson={deletePerson} />\n        </div>\n    )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}